pipeline {
  agent any

  environment {
    SONARQUBE_TOKEN = credentials('sonarqube')       // SonarQube token credential ID
    REGISTRY_CREDENTIALS = credentials('docker-cred') // Docker Hub credential ID
    SONAR_HOST_URL = 'http://44.210.144.176:9000'     // SonarQube server URL
  }

  stages {
    stage('Build & SonarQube Analysis') {
      agent {
        docker {
          image 'maven:3.9.6-eclipse-temurin-17'
          args '-v /root/.m2:/root/.m2'
        }
      }
      steps {
        echo 'Pramod - SonarQube Analysis Starting'
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh '''
            mvn clean verify sonar:sonar \
              -Dsonar.projectKey=com.abhishek:spring-boot-demo \
              -Dsonar.host.url=${SONAR_HOST_URL} \
              -Dsonar.token=${SONARQUBE_TOKEN}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      ste
