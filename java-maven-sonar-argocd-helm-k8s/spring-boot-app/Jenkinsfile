pipeline {
  agent any

  environment {
    SONARQUBE_TOKEN = credentials('sonarqube-token')    // Your SonarQube token credential ID
    DOCKERHUB_CREDS = credentials('docker-cred')        // Your Docker Hub credentials ID
    GITHUB_TOKEN = credentials('github')                 // Your GitHub token credential ID
    SONAR_HOST_URL = 'http://44.210.144.176:9000'       // Your SonarQube server URL
    GIT_REPO_NAME = "Jenkins_Project"
    GIT_USER_NAME = "Yettobemaster"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build & SonarQube Analysis') {
      agent {
        docker {
          image 'maven:3.9.6-eclipse-temurin-17'
          args '-v $HOME/.m2:/root/.m2'
        }
      }
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh '''
            mvn clean verify sonar:sonar \
              -Dsonar.projectKey=com.abhishek:spring-boot-demo \
              -Dsonar.host.url=${SONAR_HOST_URL} \
              -Dsonar.login=${SONARQUBE_TOKEN}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          script {
            def imageName = "pramodholkar/myapp:${env.BUILD_NUMBER}"
            sh "docker build -t ${imageName} ."

            docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
              docker.image(imageName).push()
            }
          }
        }
      }
    }

    stage('Update Deployment File and Push') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s') {
          script {
            sh """
              git config user.email "pramodholkar101@gmail.com"
              git config user.name "${GIT_USER_NAME}"
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
              git add spring-boot-app-manifests/deployment.yml
              git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
              git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
            """
          }
        }
      }
    }
  }

  post {
    success {
      echo 'Pipeline completed successfully!'
    }
    failure {
      echo 'Pipeline failed. Check logs for details.'
    }
  }
}
